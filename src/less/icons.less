
/* ---------------------------- *\
    Animated Hamburger Menu
    transforms to X and back
\* ---------------------------- */

.icon-hamburger-menu {
    display: inline-block;
    position: relative;
    width: 1em;
    height: .125em;
    background: @color-gray-md;
    vertical-align: middle;
    //padding: 0 2px;
    margin-bottom: .25em;
    border-radius: 2px;
    -webkit-transition: background 0s 0.3s;
            transition: background 0s 0.3s;
}

.icon-hamburger-menu::before,
.icon-hamburger-menu::after {
    position: absolute;
    display: block;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: @color-gray-md;
    border-radius: 2px;
    content: "";
    -webkit-transition-duration: 0.3s, 0.3s;
            transition-duration: 0.3s, 0.3s;
    -webkit-transition-delay: 0.3s, 0s;
            transition-delay: 0.3s, 0s;
}

.icon-hamburger-menu::before {
    top: -.275em;
    border-bottom: .15em solid @color-gray-md;
    -webkit-transition-property: top, -webkit-transform;
            transition-property: top, transform;
}

.icon-hamburger-menu::after {
    bottom: -.275em;
    border-top: .15em solid @color-gray-md;
    -webkit-transition-property: bottom, -webkit-transform;
            transition-property: bottom, transform;
}


// active state, i.e. menu open
.active > .icon-hamburger-menu,
.btn[aria-expanded="true"] .icon-hamburger-menu {
    background: none;
}

.active > .icon-hamburger-menu::before,
.btn[aria-expanded="true"] .icon-hamburger-menu::before {
    top: 0;
    -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
            transform: rotate(45deg);
}

.active > .icon-hamburger-menu::after,
.btn[aria-expanded="true"] .icon-hamburger-menu::after {
    bottom: 0;
    -webkit-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);
}

.active > .icon-hamburger-menu::before,
.active > .icon-hamburger-menu::after,
.btn[aria-expanded="true"] .icon-hamburger-menu::before,
.btn[aria-expanded="true"] .icon-hamburger-menu::after {
    -webkit-transition-delay: 0s, 0.3s;
            transition-delay: 0s, 0.3s;
}


/* Hover state */

.btn:hover > .icon-hamburger-menu,
.hover > .icon-hamburger-menu {
    background: @color-accent;

    .active&,
    [aria-expanded="true"]& {
        background: transparent!important;
    }
}
.btn:hover > .icon-hamburger-menu,
.hover > .icon-hamburger-menu {

    &::before {
        border-bottom-color: @color-accent!important;
    }
    &::after {
        border-top-color: @color-accent!important;
    }
}


/* Light theme */

.icon-hamburger-menu.t-light {
    background: #fff;

    &::before,
    &::after {
        background-color: #fff;
    }
    
    &::before {
        border-bottom-color: #fff;
    }
    &::after {
        border-top-color: #fff;
    }
}











/* ---------------------------- *\
    Animated Options Icon
\* ---------------------------- */

.icon-options {
    display: inline-block;
    position: relative;
    width: .3em;
    height: .3em;
    background: @color-gray-md;
    vertical-align: middle;
    margin: 0 .5em;
    border-radius: .5em;
    transition: background 0s 0.3s;
}

.icon-options::before,
.icon-options::after {
    position: absolute;
    display: block;
    width: 0.3em;
    height: 0.3em;
    background-color: @color-gray-md;
    content: "";
    border-radius: .5em;

    //transition back to normal
    //  delay width by .3s, do height/transform immediately
    // transition-duration: 0.3s, 0.3s, 0.3s;
    // transition-delay: 0.3s, 0s, 0s;
    // transition-property: width, height, transform;

    transition: width 0.3s 0.3s, height 0.3s 0s, transform 0.3s 0s;

}

.icon-options::before {
    left: -.375em;
}

.icon-options::after {
    right: -.375em;
}


// active state, i.e. menu open 
.active > .icon-options,
.btn[aria-expanded="true"] .icon-options,
.expanded > .icon-options {
    background: none;
}

.active > .icon-options::before,
.btn[aria-expanded="true"] .icon-options::before,
.expanded > .icon-options::before {
    width: 1em;
    height: 0.2em;
    left: -.35em;
    -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
            transform: rotate(45deg);
}

.active > .icon-options::after,
.btn[aria-expanded="true"] .icon-options::after,
.expanded > .icon-options::after {
    width: 1em;
    height: 0.2em;
    right: -.35em;
    -webkit-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);
}

.active > .icon-options::before,
.active > .icon-options::after,
.btn[aria-expanded="true"] .icon-options::before,
.btn[aria-expanded="true"] .icon-options::after,
.expanded > .icon-options::before,
.expanded > .icon-options::after {

    //transition to active state
    //  delay height/transform by .3s, do width immediately
    // transition-delay: 0s, 0.3s, 0.3s;
    transition: width 0.3s 0s, height 0.3s 0.3s, transform 0.3s 0.3s;
}

.icon-options.text-active,
.icon-options.text-active::before, 
.icon-options.text-active::after { 
    background: @color-active; 
}
.active > .icon-options.text-active,
.btn[aria-expanded="true"] .icon-options.text-active,
.expanded > .icon-options.text-active { 
    background: none; 
}


//light theme
.icon-options.t-light { background: #fff; }
.icon-options.t-light::before,
.icon-options.t-light::after { background-color: #fff; }

//vertical orientation
.icon-options.u-vertical {
    transform: rotateZ(90deg);
}













/* ---------------------------- *\
    CSS-only GeoPlatform Logo

    Uses "em" instead of "rem" 
    so that it scales with the 
    container it's in. 
    
    ie: 
    <h3><span class="icon-gp"></span></h3>
    
    would be larger than
    <h4><span class="icon-gp"></span></h4>
    
\* ---------------------------- */

.icon-gp {
    display: inline-block;
    position: relative;
    top: 1px;
    border: .15em solid @color-primary;
    box-shadow: 0 0 1px #fff;
    border-radius: 2px;
    padding: 0;
}
.icon-gp::after {
    content: " ";
    display: block;
    width: 0.75em;
    height: 0.75em;
    background-color: #fff;
    border: .125em solid @color-accent;
}











/* ---------------------------------------- *\
    Animated Search Icon
    
    Transforms into a spinning load icon 
    when inside an "active" parent element

    <button type="button" class="btn btn-default">
      <span class="icon-checked"></span>
    </button>
    
\* --------------------------------------- */

.icon-search {

    display: inline-block;
    width: 1em;
    height: 1em;
    
    &::before {
        display: block;
        content: " ";
        border: .2em solid @color-gray-dk;
        border-radius: 1em;
        width: 0.9em;
        height: 0.9em;
        
        -webkit-transition-duration: 0.2s, 0.2s;
                transition-duration: 0.2s, 0.2s;
        -webkit-transition-property: all, -webkit-transform;
                transition-property: all, transform;
    }

    &::after {
        display: block;
        content: " ";
        background-color: @color-gray-dk;
        height: 0.25em;
        width: 0.5em;
        -webkit-transform:translate(10/16/16em, -2/16em) rotate(45deg);
           -moz-transform:translate(10/16em, -2/16em) rotate(45deg); 
             -o-transform:translate(10/16em, -2/16em) rotate(45deg);
                transform:translate(10/16em, -2/16em) rotate(45deg);

        -webkit-transition-duration: 0.3s, 0.3s;
                transition-duration: 0.3s, 0.3s;
        -webkit-transition-property: width, -webkit-transform;
                transition-property: width, transform;
    }

    [aria-expanded="true"] > & , 
    .active > & {

        &::before {
            width: 1em;
            height: 1em;
            border-style: dotted;
            .spin;
        }
        &::after {
            width: 0;
        }
    }
}

//support being inside an input-group-slick element
.input-group-slick > .icon-search {
    
    position:   absolute;
    top:        .5em;
    
    //lighten color
    &::before { border-color: lighten(@color-gray-md, 5%); }
    &::after {  background-color: lighten(@color-gray-md, 5%); }

    //pad based on location in input group
    &:first-child { left: 0.5em; }
    &:last-child { right: 0.5em; }

}
.input-group-slick.active > .icon-search {
    &::before {
        width:  1em;
        height: 1em;
        border-style: dotted;
        border-color: @color-gray-dk;
        .spin;
    }
    &::after {
        width: 0;
    }
}









/* -------------------------------------- *\
    Animated Checkbox Icon

    <button type="button" class="btn btn-default">
      <span class="icon-checked"></span>
    </button>

\* -------------------------------------- */

.icon-checked {

    display: inline-block;
    position: relative;
    width: 1em;
    height: 1em;
    border: 3/16em solid @color-gray-dk;
    border-radius: 3/16em;

    &::after {

        content: '';
        display: block;
        height: 0px;
        left: 0px;
        position: absolute;
        top: 6/16em;
        width: 0px;
        border-right: 0 solid @color-accent;
        border-top: 0 solid @color-accent;
        transform: scaleX(-1) rotate(180deg + -45deg);
        transform-origin: top left;
        -webkit-transition: width 0.3s, height 0.6s 0.3s;
        transition: width 0.3s, height 0.6s 0.3s;
    }

    .active > & {
        background: none;

        &::after {
            border-right-width: .25em;
            border-top-width: .25em;
            width: .5em;
            height: 1em;
        }
    }
}



